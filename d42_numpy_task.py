# -*- coding: utf-8 -*-
"""D42 Numpy task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BBdgU65d-ReutZEjFjq2J1LDCwVUJNR5

**1. The most basic kind of broadcast is with a scalar, in which you can perform a binary
operation (e.g., add, multiply, ...) on an array and a scalar, the effect is to perform that
operation with the scalar for every element of the array. To try this out, create a vector
1, 2, . . . , 10 by adding 1 to the result of the arange function.**
"""

import numpy as np      
vector= np.arange(1,11)         #using arange function to generate vector with 1 X 10
result_vector=vector+1
print(result_vector)

"""**2. Now, create a 10 × 10 matrix A in which A[i][j] = i + j. You’ll be able to do this using
the vector you just created, and adding it to a reshaped version of itself**
"""

import numpy as np
B=np.reshape((np.arange(1,101)),(-1,10))  # creating a 10 X 10 matrix with random values 
A=B+B                                     # a[i][j]=i+j which is adding the matrix to itself

"""**3. Now, compute the mean and standard deviation of each column. This should result in
two vectors of length 5. You’ll need to think a little bit about how to use the axis
argument to mean and std. Store these vectors into variables and print both of them.**
"""

import numpy as np
import numpy.random as npr   #using random module to generate random values
data = ( npr.randn(50, 5) )  #creating a matrix of 50 X 5
Mean_data=np.mean(data,axis=0)  #finding the mean of given value in terms of column wise
Std_data=np.std(data,axis=0)    # standard deviation of the data in terms of column wise
print(Mean_data)
print(Std_data)

"""**5. Now standardize the data matrix by**
**1.  subtracting the mean off of each column, and**
**2.  dividing each column by its standard deviation. Do this via broadcasting, and store the result in a matrix called normalized. 
To verify that you successfully did it, compute
the mean and standard deviation of the columns of normalized and print them out.**
"""

import numpy as np
import numpy.random as npr              #using random module to generate random values
data = np.exp (npr.randn(50, 5))        #creating a matrix of 50 X 5
Mean_of_data=np.mean(data,axis=0)       #finding the mean of given value in terms of column wise
Std_data=np.std(data,axis=0)            # standard deviation of the data in terms of column wise                    
normalized=np.divide((np.subtract(data,Mean_of_data)),Std_data)  #creating new matrix with given condition in the question by first subtracting  mean value for each column and dividing with standard deviation
normalized_mean=np.mean(normalize,axis=0)   #computing new mean for the normalized data
normalized_std=np.std(normalize,axis=0)     #computing new standard deviation for the normalized data
print("data= ",data)
print("Mean of data =" ,Mean_of_data)
print("std deviation of data =" ,Std_data)
print("normalized data =",normalized)
print("nm",normalized_mean)
print("n std =", normalized_std)
"The normalized mean will be equivalent to zero and std deviation will be 1"

"""**Part-2**

**Aim: Performing the Hypothesis testing using the Chi-squared test
The table below is a survey response to 4 categorical variables: people in categories from
18–29, 30–44, 45–64 and >65 years, and their movie genre inclination, which is
“Action/Adventure”, “Romance” and “Biography”. Is there any evidence of a relationship
between the age group and their movie genre inclination, at 5% significance level?**
"""

import numpy as np
from scipy.stats import chi2_contingency                       #importing chi2_contigency module from scipy
age_groupdata=[[141,68,4],[179,159,7],[220,216,4],[86,101,4]]  #data value considered for this simulation
chi2, P, dof, expected =chi2_contingency(age_groupdata)        #result will be a tuple hence assigning it with respective values
print("P value = ",P)
print("Chi2 value=",chi2)
print("DOF =",dof)
print("Expected vaulues = ",expected)
if P < 0.05:                                                   #rejection or acceptance based on comparision with alpha of 0.05
  print("There is no significance evidence that the age group and their movie genre inclination, the values are independent")